group 'me.modmuss50'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'

sourceCompatibility = 1.6

version = "0.0.1"

def ENV = System.getenv()
if (ENV.BUILD_NUMBER) {
	version = version + "." + "${System.getenv().BUILD_NUMBER}"
}

repositories {
    mavenCentral()
}

dependencies {
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
	compile group: 'commons-io', name: 'commons-io', version: '2.5'
	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.3'
	compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

}

jar {
	from {
		configurations.compile.each { dep ->
			from(project.zipTree(dep)){
				exclude 'META-INF', 'META-INF/**'
			}
		}
	}
}

uploadArchives {
	repositories {
		mavenDeployer {
			//This is used when the build is done on a slave node
			if (project.hasProperty('mavenPass')) {
				println 'Uploading to remote Maven Repo'
				repository(url: "http://mavenupload.modmuss50.me/") {
					authentication(userName: "buildslave", password: project.getProperty('mavenPass'))
				}
			} else {
				//this is when the build is executed on the master node
				println 'Uploading to local Maven Repo'
				repository(url: "file:///var/www/maven/")
			}
			pom {
				groupId = "me.modmuss50"
				version = project.version
				artifactId = project.archivesBaseName
				project {
					name project.archivesBaseName
					packaging 'jar'
					description 'Mattermost api for java'
					url 'https://github.com/TechReborn/TechReborn'
				}
			}
		}
	}
}
